In this project, we are going to create a bookstore application that showcases a product catalog. Products typically contain unique identifiers and attributes such as description, quantities, locations and prices. The method for retrieving these types of attributes(specifically, the access pattern) is often a key-value lookup based on the product's unique identifier. This means that an application can retrieve these other attributes when a product's unique identifier is provided


While the product catalog can start off with a few products, it should have the ability to scale to billions if needed without having to be re-architected or requiring a different database. It should also maintain fast, predictable performance at any scale for these key-value lookups. With these requirements in mind. Amazon Dynamodb is a good fit as the database as the durable system of record for the bookstore because it offers low latency(single digit millisecond latency for read/write operations) performance and scales as your application grows. Another benefit is that you do not need to manage any servers or clusters.


Objectives:
Build an application using NoSQL key-value data store in Dynamodb
perform basic task; inserting and retrieving data
using secondary indexes to enable additional query patterns
using the dynamodb api to update attributes of existing items and remove  items